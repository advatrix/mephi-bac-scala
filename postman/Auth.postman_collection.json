{
	"info": {
		"_postman_id": "1dfc933f-16bf-4405-afb7-2902f414da0a",
		"name": "Auth",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Signup",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// тест 1.1\r",
							"\r",
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Result is success\", () => {\r",
							"    const json = pm.response.json();\r",
							"    pm.expect(json.result).to.eql(\"success\");\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"user1\",\r\n    \"first_name\": \"Петр\",\r\n    \"middle_name\": null,\r\n    \"last_name\": \"Петров\",\r\n    \"phone\": \"+74951234567\",\r\n    \"email\": \"email@email.com\",\r\n    \"birth_date\": \"2000-01-01\",\r\n    \"password\": \"letmein\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:9000/signup",
					"host": [
						"localhost"
					],
					"port": "9000",
					"path": [
						"signup"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// тест 1.2\r",
							"\r",
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Got access token\", () => {\r",
							"    const json = pm.response.json();\r",
							"    pm.collectionVariables.set(\"access_token\", json.access_token);\r",
							"    pm.expect(json.access_token).to.be.a(\"string\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"user1\",\r\n    \"password\": \"letmein\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:9000/login",
					"host": [
						"localhost"
					],
					"port": "9000",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get user data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Data is correct\", () => {\r",
							"    const json = pm.response.json();\r",
							"    pm.expect(json.username).to.eql(\"user1\");\r",
							"    pm.expect(json.first_name).to.eql(\"Петр\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer test_user1",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:9000/api/get-user-data",
					"host": [
						"localhost"
					],
					"port": "9000",
					"path": [
						"api",
						"get-user-data"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get permissions",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Contains default permission\", () => {\r",
							"    const json = pm.response.json();\r",
							"    const getUserData = json.find(m => m == \"/api/get-user-data\");\r",
							"    pm.expect(getUserData).to.be.a(\"string\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer test_user1",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:9000/api/get-permissions",
					"host": [
						"localhost"
					],
					"port": "9000",
					"path": [
						"api",
						"get-permissions"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update user data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
						"key": "Authorization",
						"value": "Bearer test_user1",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"first_name\": \"Иван\",\r\n    \"middle_name\": null,\r\n    \"last_name\": \"Петров\",\r\n    \"birth_date\": \"2000-01-01\",\r\n    \"phone\": \"+74951234567\",\r\n    \"password\": \"letmein\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:9000/api/update-user-data",
					"host": [
						"localhost"
					],
					"port": "9000",
					"path": [
						"api",
						"update-user-data"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get changed user data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Data is correct\", () => {\r",
							"    const json = pm.response.json();\r",
							"    pm.expect(json.username).to.eql(\"user1\");\r",
							"    pm.expect(json.first_name).to.eql(\"Иван\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer test_user1",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:9000/api/get-user-data",
					"host": [
						"localhost"
					],
					"port": "9000",
					"path": [
						"api",
						"get-user-data"
					]
				}
			},
			"response": []
		},
		{
			"name": "logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer test_user1",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:9000/logout",
					"host": [
						"localhost"
					],
					"port": "9000",
					"path": [
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get user data while not logged in",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:9000/api/get-user-data",
					"host": [
						"localhost"
					],
					"port": "9000",
					"path": [
						"api",
						"get-user-data"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "access_token",
			"value": "test_user1"
		}
	]
}